name: Deploy Next.js to Remote Server

on:
  push:
    branches:
      - pre-prod  # Replace with your branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

    # Install yarn
      - name: Install yarn
        run: |
         npm install -g yarn

      # Step 3: Install dependencies
      - name: Install dependencies
        run: yarn install

      - name: Build Next.js app
        run: |
          echo "${{ secrets.PREPROD_ENV_FILE }}" > .env
          yarn build

      - name: Compress .next directory
        run: tar -czf next_and_node_modules.tar.gz .next node_modules

      - name: Copy build files to the remote server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.STAGING_SERVER_KEY }}
          REMOTE_USER: ${{ secrets.STAGING_SERVER_USERNAME }}
          REMOTE_HOST: ${{ secrets.STAGING_SERVER_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$REMOTE_HOST" >> ~/.ssh/known_hosts
          
          # Copy .next folder, public folder, and node_modules to the server
          scp -r next_and_node_modules.tar.gz "$REMOTE_USER@$REMOTE_HOST:/home/devonadmin/pre-prod/e-filing-frontend/"

      # Step 6: SSH into the server, pull latest code, and run docker-compose
      - name: SSH into the server, pull latest code, and run Docker Compose
        env:
          SSH_PRIVATE_KEY: ${{ secrets.STAGING_SERVER_KEY }}
          REMOTE_USER: ${{ secrets.STAGING_SERVER_USERNAME }}
          REMOTE_HOST: ${{ secrets.STAGING_SERVER_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$REMOTE_HOST" >> ~/.ssh/known_hosts

          # SSH into the server, pull the latest code, and run docker-compose
          ssh -o StrictHostKeyChecking=no "$REMOTE_USER@$REMOTE_HOST" << 'EOF'
            # Navigate to the project directory
            cd /home/devonadmin/pre-prod/e-filing-frontend || exit
            # Pull latest code from the repo
            rm package-lock.json yarn.lock
            git pull origin pre-prod || exit
            rm -rf .next node_modules
            tar -xzf next_and_node_modules.tar.gz
            rm next_and_node_modules.tar.gz
            docker compose up --build -d
          EOF
